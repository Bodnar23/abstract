Первый модуль 

Классификация сайтов, этапы создания

Виды сайтов
1)Landing page (одностраничный сайт):
    1)одностраничный интернет магазин
    2)сайт видитка
    3)сайт опросник
2)Корпоративные сайты - большие многостраничные сайты
3)Интеренет - магазины
4)Форумы(стэк оверфлоу-вопрос-ответ)
5)Информационные - новости
6)Сервисы и приложение(например авиасэйлс,инстаграмм,фейсбук)

Этапы cоздания сайта
1)Постановка задачи(занимается менеджер и дизайн)
2)Дизайн(занимается дизайнер):
    1)мудборд/доска с настроением(что нравится,цвета и т.д/что должно быть расположено и содержаться)
    2)текстовый прототип (шаблон сайта/предположение/структура(где что расположено))
    3)дизайн макет - визуальный прототип
    4)дизайн - макет
Например через программу wireframe

3)Вёрстка(frontend) - дизайн макета превращается в реальный функционирующий сайт
    1)HTML + CSS
    2)JS

4)Программирование(backend)/не везде используется
    1)посадка готового CMS(система управление сайтом).Администратор может менять сайт,его поведение(ворлдпресс, один икс би)
                или
    2)написать свой собственный движок

5)Релиз(Продвижение)
    1)SEO - чтоб продвигать сайт в поисковике/повышает рейтинг сайта
    2)Контекстная рекламма - ссылочки с рейтингом
    3)Таргетированная рекламма

Фотошоп

Если макет сделан в фотошопе,он имеет формат psd 

Бывает растовая графика и векторная

Растовая - каринки состоящие из пикселей
Векторная - используются математические формулы (не портится качество)

Форматы

Растовая:
jpg - для того чтобы растовые картинки не теряли качество
png - когда нам нужно сохранить прозрачность
WebP - более качественное и занимает меньше места

Векторная:
SVG - для логотипов и иконок

3 правила при создании проэкта:
   1)структурируем
   2)правильно называет элементы
   3)не используем кирилицу и пробелы

Программы для просмотра вёрстки:

Avocode, Zeplin, Figma, Psdetch

___________________________________________________________

Сетки для семетрии и красивого дизайна

Как спасти иконки и превратить их в SVG формат

HTML - это язык разметки страницы(скилет, каркас)
CSS - это мясо на скилете

___________________________________________________________
Основы HTML

Начало работы:
! + tab

Теги:
<html> самый главный
<head> техническая часть
<body> структура страницы
<meta> кодировка страницы,правильное отображение на телефоне, отвечают за описание нашей страницы
<title> описание нашей страницы,по сути заголовок
<body> тело нашего сайта

Коментируем:
кусочек: shift + alt + a
всю строку: command + /

___________________________________________________________

Основные теги HTML и атрибуты

                         h1
                    h2        h2
                h3       h3       h3      

<h1>Заголовок первого порядка, он может быть только один</h1>
<br>Перенос строки
<h2>Заголовок вротого порядка</h2>
<ol>Список, менюшка имеющая нумерацио</ol>
<ul>Список без нумерации</ul>


Горячие клавиши 
li*12 + enter
Получаем 
<li></li> и таких 12 штук

Атрибуты - дополнительные параметры
Специфические
Общие

___________________________________________________________
Сематические теги - улучшаем оптимизацию сайта
<header></header> -  шапка сайта
<nav></nav> - навигационное меню
<article></article> - запись в блоге, для разграничения статей(оформление записи в блоге)
<section></section> - секции на сайте
<aside></aside> - чтобы оформлять колонки в виджеты(боковая колонка с информацией)
<main></main> - всё главное на сайте(основное содержание документа)
<address></address> - адрес сайта
<footer></footer> - подвал сайта
<mark></mark> - для выделения текста маркером
<wbr> -перенос строки
<time></time> - время которое мы хотим показать пользователю

___________________________________________________________

CSS - язык стилей

Подключаем css к HTML 
В конце тега head вот так:

<head>

<link rel="stylesheet" href="/web/Практика/src/css/style.css">
</head>


Селектор - это то по какому параметру или свойству мы можем обратиться к определённому элементу на странице
селектор {
    свойство: значение;
    свойство: значение;
    свойство: значение;
    свойство: значение;
}

h2 {
   color: red;
   font-size: 30px; - размер шрифта
   text-align: center; - чтобы сделать по центру
   font-weight: bold; - регулирует жирность нашего текста
   font-weight: 500; - регулирует жирность нашего текста
   font-style: italic; - наклонный текст
   text-decoration: underline; - подчёркивает
   text-decoration: line-through; - зачёркивает
   font-size: 30px; - размер шрифта
   text-transform: uppercase; - изменение регистра(например все большие буквы)
}

Обращаемся к определённому классу
В html:
<h2 class="chapter">CHAPTER I.Down the Rabbit-Hole</h2>
В css:
.chapter {
    color: blue;
}

Обращаемся через айди
В html:
<li id="begin">Down thr Rabbit-Hole</li>
В css:
#begin {
    color: orange;
}

Цвета можно задать тремя способами:
Название:red
Хэкс код:#FF82EE
RGB формат:rgb(0,0,139)
RGBA формат:rgba(0,0,139, 0.3) - такой же как rgb + прозрачность

___________________________________________________________
Блочная моддель css

В html пишем 
.box и энтер
получаем

<div class="box"></div>

В css пишем

.box {
    width: 300px; высота
    height: 300px; ширина
    background-color: green; задний фон
    padding: 20px; отступ
    padding-left: 50px; отступ с лева
    padding: 20px 50px 40px 60px;
             верх право низ лево
  /* border-width: 3px;
    border-style: solid;
    border-color: black; */
    border: 3px solid black; сокращённо всё вместе    
}

___________________________________________________________
Блочная модель css часть 2

/* Блочные */ Block
/* Строчные */ Inlain
/* Строчно-блочные */

Блоки - каркас сайта
<div> </div> - классический блочный элемент
Блочный элемент захватывает всю ширину
Имеют все свойства

box-sizing в css можно редактировать размер всего бокса поностью

Строчные элементы занимают ровно столько места сколько им понадобится, не отодвигаются сверху или снизу и не реагируют на свойсва ширины

Картинки тоже строчный элемент

Ручным способом с помощью display мы можем менять структуру, блок в строчную и наоборот

<p> </p> - блочный элемент

_____________________________________________________________________________
Позиционирование элементов на странице

Позишон

1) Статик

nav {
    position: static;
}  Стандартное по умолчанию элемент за элементом как в вёрстке

2) Релитив. Чтобы контролировать полностью пишем 
Здесь мы можем полностью задать координаты

nav {
    position: relative;
    left: 30px; в лево
    top: 50px; в низ
    right: 50px; в право
    bottom: 40px; в верх
}

3) Апсолют - полностью выставляем вручную положение, можем расположить элемент в любой части страницы

nav {
    position: absolute;
    left: 0px;
    top: 50px;
}

Мы можем помещать куда хотим так как он находится в теге бади

4) Фиксед - вращается вместе со страницей.Прилипаем на определённое место и всегда следует за ним

nav {
    position: fixed;
    right: 0px;
    top: 50px;
}

5) Инхерит - берём свойство и наследуем от родителя. Повторяем, наследует свойство от родителя

nav {
    position: inherit;
    right: 0px;
    top: 50px;
}

_________________________________________________________________________________
Принцип карточной колоды

z-index - 

.red {
    position: absolute;
    left: 80px;
    background-color: red;
    z-index: -1;
}

Чтобы элементы не наезжали друг на друга в позиции апсолют нужно ставить отрицательно значение. Двигаем элементы по оси z

_____________________________________________________________________________

Выравнивание контента по вертикали

img {
    display: block;
    margin: 0 auto;
    width: 650px;
    float: left; - прижимает всё в лево, оптикание
    vertical-align: top; - работает только когда display: inline-block
}
_____________________________________________________________________________
Единицы измерения css

1)Относительные единицы

px пиксели
% процент
ex высота символа x
em высота шрифта текущего элемента

2)Абсолютные единицы

in - дюйм  (1 дюйм = 2,54 см)
cm - сантиметр
mm - миллиметр
pt - пункт (1 пункт = 1/72 дюйма)
pc - пика (1 пика = 12 пунктам)

3)Новые величины

rem - зависит от размера шрифта корневого элемента
vw - измеряет ширину и высоту экрана (1/100 ширины)
vh - измеряет ширину и высоту экрана (1/100 высоты)
_____________________________________________________________________________
Специфичность css селекторов

div {
    color: blue;
}

.element {
    color: red;
}

.big {
    color: black;
}

#second {
    color: yellow;
}

Каскадность

Одно прекрывает другое сначала див потом классы (берётся последний класс)потом айди (#) перебивает все остальные

Инлайн стили - задаётся в html он самый специфичный, перебивает всё

_____________________________________________________________________________
Flexbox - построены по принципу осей (главная и поперечная)

.my-flex-container {
    display: flex;
    justify-content: space-between; - на одинаковом расстоянии по всей оси
    height: 450px;
}

.my-flex-container {
    display: flex;
    justify-content: center; - строго по центру
    height: 450px;
}

.my-flex-container {
    display: flex;
    justify-content: space-around; - равномерно по всей длинне
    height: 450px;
}

.my-flex-container {
    display: flex;
    flex-wrap: wrap; - чтобы те которые не помещаются сместились вниз
    flex-direction: column; - меняем оси
    justify-content: space-around; - отвечает за выравнивание элементов по главной оси
    align-items: center; - отвечает за выравнивание элементов по поперечной оси
    height: 450px;
}
___________________________________________________________
Шрифты

font-family: serif; - с засечками, более мягкий, как будто образуют единую линию
font-family: sans-serif; - более грубый

___________________________________________________________
* {
    align-items: center; - флекс выравнивание
    box-shadow: inset 0 0 0 rgba(0, 0, 0, 0.18); - добавляет тень элементу
    border: 4px solid rgba(0, 0, 0, 0.23); - толщина стиль и цвет границы
    background-image: linear-gradient(to top, #2798b9 0%, #3ab6da 100%); - фоновое изображение
    background-color: #efefef; - фоновый цвет
    background: url('../img/bg/bgMain.png') center center/cover no-repeat; - фон
    border-radius: 100%; - закругляет углы элемента
    box-sizing: border-box; - ширина и высота блока
    cursor: pointer; - устанавливает форму курсора
    color: #ffffff; - цвет
    display: block; - как элемент показан в документе (например блочный)
    font-family: 'Roboto', sans-serif; - устанавливает семейство шрифта
    flex-wrap: wrap; - указывает сколько строк можно занять флексам
    font-size: 15px; - размер шррифта
    font-weight: 500; - насыщеность шрифта
    height: 800px; - высота
    justify-content: space-around; - как браузер распределяет пространство  вокруг флекс элементов
    line-height: 24px; - минимальная высота строки текста
    left: -240px; - позиционирование от левого края
    margin-top: 14px; - отступ от верхнего края элемента
    min-height: 604px; - задаёт минимальную высоту элемента
    margin: 0; - устанавливает величину отступа от каждого края элемента
    margin-left: 391px; - устанавливает велечину от левого края элемента
    position: absolute; - позиционирование элемента относительно окна браузера и других обьектов
    padding: 0; - значение полей вокруг содержисого элемента
    top: -54px; - позиционирование расстояния от верхнего края родительского эл до верхнего дочерного эл
    text-shadow: -1px -1px 0 rgba(0, 0, 0, 0.22); - тень к тексту
    text-transform: uppercase; - управляет регистром и видом прописи текста
    text-align: center; - выравнивание текста
    text-decoration: underline; - подчёркнутый текст
    width: 1140px; - ширина
    z-index: -1; - прозрачность
}